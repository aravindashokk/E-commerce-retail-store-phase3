{"ast":null,"code":"var orders, equipment, pickupdelivery, customer, tasks, employees, managers;\nexport function populateTables() {\n  // fetch orders list\n  orders = require('../assets/staticData/ManageOrder.json');\n  populateOrderList(orders['Manage Orders']); // fetch equipments list\n\n  equipment = require('../assets/staticData/ManageEqupment.json');\n  populateEquipmentList(equipment['ManageEquipment']); // fetch pickup/delivery list\n\n  pickupdelivery = require('../assets/staticData/ManageService.json');\n  populatePickupDeliveryList(pickupdelivery['ManageService']); // fetch customer list\n\n  customer = require('../assets/staticData/ManageCustomers.json');\n  populateCustomerList(customer['ManageCustomer']); // fetch tasks list\n\n  tasks = require('../assets/staticData/ManageTask.json');\n  populateTaskList(tasks['ManageTask']); // fetch employees list\n\n  employees = require('../assets/staticData/ManageEmployee.json');\n  populateEmployeeList(employees['ManageEmployee']); // fetch managers list\n\n  managers = require('../assets/staticData/ManageManagers.json');\n  populateManagerList(managers['ManageManagers']);\n} // populate order table\n\nfunction populateOrderList(orders) {\n  var _document$getElementB;\n\n  var orderTable = (_document$getElementB = document.getElementById('order-table')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.childNodes[0];\n\n  if (orderTable) {\n    orders.forEach(element => {\n      orderTable.innerHTML += `<tr id=\"${`order_` + element.No}\">\n                <td>${element.No}</td>\n                <td>${element.OrderNo}</td>\n                <td>${element.CustomerName}</td>\n                <td>${element.Phone}</td>\n                <td>${element.Type}</td>\n                <td><span class=\"action-icons\"><img src=\"../../assets/images/edit.png\" onclick= \"editOrder(${`order_` + element.No})\" title=\"edit\"> <img src=\"../../assets/images/delete.png\" onclick=\"deleteRecord(order_${element.No})\" title=\"delete\"></span></td>\n            </tr>`;\n    });\n  }\n} // populate employee table\n\n\nfunction populateEmployeeList(employees) {\n  var _document$getElementB2;\n\n  var employeeTable = (_document$getElementB2 = document.getElementById('employee-table')) === null || _document$getElementB2 === void 0 ? void 0 : _document$getElementB2.childNodes[0];\n\n  if (employeeTable) {\n    employees.forEach(element => {\n      employeeTable.innerHTML += `<tr id=\"${`employee_` + element.id}\">\n                <td>${element.id}</td>\n                <td>${element.name}</td>\n                <td>${element.email}</td>\n                <td>${element.Address}</td>\n                <td>${element.PhoneNo}</td>\n                <td>${element.Gender}</td>\n                <td><span class=\"action-icons\"><img src=\"../assets/images/edit.png\" onclick= \"editOrder(${`order_` + element.id})\" title=\"edit\"> <img src=\"../assets/images/delete.png\" onclick=\"deleteRecord(order_${element.id})\" title=\"delete\"></span></td>\n            </tr>`;\n    });\n  }\n} //// populate manager table\n\n\nfunction populateManagerList(managers) {\n  var _document$getElementB3;\n\n  var managerTable = (_document$getElementB3 = document.getElementById('manager-table')) === null || _document$getElementB3 === void 0 ? void 0 : _document$getElementB3.childNodes[0];\n\n  if (managerTable) {\n    managers.forEach(element => {\n      managerTable.innerHTML += `<tr id=\"${`employee_` + element.id}\">\n                <td>${element.id}</td>\n                <td>${element.name}</td>\n                <td>${element.email}</td>\n                <td>${element.Address}</td>\n                <td>${element.PhoneNo}</td>\n                <td>${element.Gender}</td>\n                <td>${element.Position}</td>\n                <td>${element.Branch}</td>\n                <td><span class=\"action-icons\"><img src=\"../assets/images/edit.png\" onclick= \"editOrder(${`order_` + element.id})\" title=\"edit\"> <img src=\"../assets/images/delete.png\" onclick=\"deleteRecord(order_${element.id})\" title=\"delete\"></span></td>\n            </tr>`;\n    });\n  }\n} // populate equipment table\n\n\nfunction populateEquipmentList(equipment) {\n  var _document$getElementB4;\n\n  var equipmentTable = (_document$getElementB4 = document.getElementById('equipment-table')) === null || _document$getElementB4 === void 0 ? void 0 : _document$getElementB4.childNodes[0];\n\n  if (equipmentTable) {\n    equipment.forEach(element => {\n      equipmentTable.innerHTML += `<tr id=\"${`equipment_` + element.No}\">\n                <td>${element.No}</td>\n                <td>${element.EquipmentName}</td>\n                <td>${element.Status}</td>\n                <td>${element.OrderNo}</td>\n                <td>${element.CustomerName}</td>\n                <td><span class=\"action-icons\"><img src=\"../assets/images/edit.png\" onclick=\"editEquipment(${`equipment_` + element.No}) title=\"edit\"> <img src=\"../assets/images/delete.png\" onclick=\"deleteRecord(equipment_${element.No})\" title=\"delete\"></span></td>\n            </tr>`;\n    });\n  }\n} // populate customer table\n\n\nfunction populateCustomerList(customers) {\n  var _document$getElementB5;\n\n  let customerTable = (_document$getElementB5 = document.getElementById('customer-table')) === null || _document$getElementB5 === void 0 ? void 0 : _document$getElementB5.childNodes[0];\n\n  if (customerTable) {\n    customers.forEach(element => {\n      customerTable.innerHTML += `<tr id=\"${`employee_` + element.id}\">\n                <td>${element.id}</td>\n                <td>${element.name}</td>\n                <td>${element.Address}</td>\n                <td>${element.email}</td>\n                <td>${element.PhoneNo}</td>\n                <td>${element.Gender}</td>\n                <td><span class=\"action-icons\"><img src=\"../assets/images/edit.png\" onclick=\"editEquipment(${`customer_` + element.id}) title=\"edit\"> <img src=\"../assets/images/delete.png\" onclick=\"deleteRecord(customer_${element.id})\" title=\"delete\"></span></td>\n            </tr>`;\n    });\n  }\n} //// populate pickupdelivery table\n\n\nfunction populatePickupDeliveryList(pickupdeliveries) {\n  var _document$getElementB6;\n\n  let pickupdeliveryTable = (_document$getElementB6 = document.getElementById('delivery-table')) === null || _document$getElementB6 === void 0 ? void 0 : _document$getElementB6.childNodes[0];\n\n  if (pickupdeliveryTable) {\n    pickupdeliveries.forEach(element => {\n      pickupdeliveryTable.innerHTML += `<tr id=\"${`pickupdelivery_` + element.Sno}\">\n                <td>${element.Sno}</td>\n                <td>${element.OrderNo}</td>\n                <td>${element.Name}</td>\n                <td>${element.Address}</td>\n                <td>${element.PhoneNo}</td>\n                <td>${element.AssignedTo}</td>\n                <td>${element.ServiceType}</td>\n                <td><span class=\"action-icons\"><img src=\"../assets/images/edit.png\" onclick=\"editEquipment(${`pickupdelivery_` + element.Sno}) title=\"edit\"> <img src=\"../assets/images/delete.png\" onclick=\"deleteRecord(pickupdelivery_${element.Sno})\" title=\"delete\"></span></td>\n            </tr>`;\n    });\n  }\n} // populate tasks table\n\n\nfunction populateTaskList(tasks) {\n  var _document$getElementB7;\n\n  let tasksTable = (_document$getElementB7 = document.getElementById('tasks-table')) === null || _document$getElementB7 === void 0 ? void 0 : _document$getElementB7.childNodes[0];\n\n  if (tasksTable) {\n    tasks.forEach(element => {\n      tasksTable.innerHTML += `<tr id=\"${`tasks_` + element.Sno}\">\n                <td>${element.Sno}</td>\n                <td>${element.CustomerName}</td>\n                <td>${element['Assigned To']}</td>\n                <td>${element.Desc}</td>\n                <td>${element.Services}</td>\n                <td><span class=\"action-icons\"><img src=\"../assets/images/edit.png\" onclick=\"editEquipment(${`tasks_` + element.Sno}) title=\"edit\"> <img src=\"../assets/images/delete.png\" onclick=\"deleteRecord(tasks_${element.Sno})\" title=\"delete\"></span></td>\n            </tr>`;\n    });\n  }\n} //add new row to order table\n\n\nexport function addOrder() {\n  var orderTable = document.getElementById('order-table').childNodes[0];\n  let number = orders['Manage Orders'].length + 1;\n  orderTable.innerHTML += `<tr id=\"order_${number}\">\n        <td>${number}</td>\n        <td>${(Number(orders['Manage Orders'][orders['Manage Orders'].length - 1].OrderNo) + 1).toString()}</td>\n        <td><input type=\"text\" placeholder=\"Customer Name\"></td>\n        <td><input type=\"number\" maxLength=\"10\" placeholder=\"Phone\"></td>\n        <td><input type=\"text\" placeholder=\"Type\"></td>\n        <td><span class=\"action-icons\"><img src=\"../assets/images/tick.png\" title=\"accept\"> <img src=\"../assets/images/close.png\" title=\"discard\" onclick=\"discardRow(order_${number})\"></span></td></tr>`;\n} //add new row to equipment table\n\nexport function addEquipment() {\n  let number = Number(equipment['ManageEquipment'][equipment['ManageEquipment'].length - 1].No);\n  var equipmentTable = document.getElementById('equipment-table').childNodes[0];\n  equipmentTable.innerHTML += `<tr id=\"equipment_${number + 1}\">\n                <td>${number + 1}</td>\n                <td><input type=\"text\" placeholder=\"Equipment Name\"></td>\n                <td><input type=\"text\" placeholder=\"Status\"></td>\n                <td><input type=\"text\" placeholder=\"Order No\"></td>\n                <td><input type=\"text\" placeholder=\"Customer Name\"></td>\n                <td><span class=\"action-icons\"><img src=\"../assets/images/tick.png\" title=\"accept\"> <img src=\"../assets/images/close.png\" title=\"discard\" onclick=\"discardRow(equipment_${number + 1})\"></span></td>\n            </tr>`;\n} //add new row to tasks table\n\nexport function addTasks() {\n  let number = Number(tasks['ManageTask'][tasks['ManageTask'].length - 1].Sno);\n  var taskTable = document.getElementById('tasks-table').childNodes[0];\n  taskTable.innerHTML += `<tr id=\"tasks_${number + 1}\">\n                <td>${number + 1}</td>\n                <td><input type=\"text\" placeholder=\"Customer Name\"></td>\n                <td><input type=\"text\" placeholder=\"Assigned to\"></td>\n                <td><input type=\"text\" placeholder=\"Desc\"></td>\n                <td><input type=\"text\" placeholder=\"Services\"></td>\n                <td><span class=\"action-icons\"><img src=\"../assets/images/tick.png\" title=\"accept\"> <img src=\"../assets/images/close.png\" title=\"discard\" onclick=\"discardRow(tasks_${number + 1})\"></span></td>\n            </tr>`;\n} ////add new row to customer table\n\nexport function addCustomer() {\n  let number = Number(customer['ManageCustomer'][customer['ManageCustomer'].length - 1].id);\n  var customerTable = document.getElementById('customer-table').childNodes[0];\n  customerTable.innerHTML += `<tr id=\"customer_${number + 1}\">\n                <td>${number + 1}</td>\n                <td><input type=\"text\" placeholder=\"Name\"></td>\n                <td><input type=\"text\" placeholder=\"Address\"></td>\n                <td><input type=\"email\" placeholder=\"Email\"></td>\n                <td><input type=\"number\" placeholder=\"Phone No\"></td>\n                <td><input type=\"text\" placeholder=\"Gender\"></td>\n                <td><span class=\"action-icons\"><img src=\"../assets/images/tick.png\" title=\"accept\"> <img src=\"../assets/images/close.png\" title=\"discard\" onclick=\"discardRow(customer_${number + 1})\"></span></td>\n            </tr>`;\n} //add new row to employee table\n\nexport function addEmployee() {\n  let number = Number(employees['ManageEmployee'][employees['ManageEmployee'].length - 1].id);\n  var employeeTable = document.getElementById('employee-table').childNodes[0];\n  employeeTable.innerHTML += `<tr id=\"employee_${number + 1}\">\n                <td>${number + 1}</td>\n                <td><input type=\"text\" placeholder=\"Name\"></td>\n                <td><input type=\"text\" placeholder=\"Email\"></td>\n                <td><input type=\"email\" placeholder=\"Address\"></td>\n                <td><input type=\"number\" placeholder=\"Phone No\"></td>\n                <td><input type=\"text\" placeholder=\"Gender\"></td>\n                <td><span class=\"action-icons\"><img src=\"../assets/images/tick.png\" title=\"accept\"> <img src=\"../assets/images/close.png\" title=\"discard\" onclick=\"discardRow(employee_${number + 1})\"></span></td>\n            </tr>`;\n} //add new row to manager table\n\nexport function addManager() {\n  let number = Number(managers['ManageManagers'][managers['ManageManagers'].length - 1].id);\n  var managerTable = document.getElementById('manager-table').childNodes[0];\n  managerTable.innerHTML += `<tr id=\"manager_${number + 1}\">\n                <td>${number + 1}</td>\n                <td><input type=\"text\" placeholder=\"Name\"></td>\n                <td><input type=\"text\" placeholder=\"Email\"></td>\n                <td><input type=\"email\" placeholder=\"Address\"></td>\n                <td><input type=\"number\" placeholder=\"Phone No\"></td>\n                <td><input type=\"text\" placeholder=\"Gender\"></td>\n                <td><input type=\"text\" placeholder=\"Position\"></td>\n                <td><input type=\"text\" placeholder=\"Location\"></td>\n                <td><span class=\"action-icons\"><img src=\"../assets/images/tick.png\" title=\"accept\"> <img src=\"../assets/images/close.png\" title=\"discard\" onclick=\"discardRow(manager_${number + 1})\"></span></td>\n            </tr>`;\n} //add new row to delivery table\n\nexport function addDeliveries() {\n  let number = Number(pickupdelivery['ManageService'][pickupdelivery['ManageService'].length - 1].Sno);\n  var pickupdeliveryTable = document.getElementById('delivery-table').childNodes[0];\n  pickupdeliveryTable.innerHTML += `<tr id=\"pickupdelivery_${number + 1}\">\n                <td>${number + 1}</td>\n                <td><input type=\"text\" placeholder=\"Order No\"></td>\n                <td><input type=\"text\" placeholder=\"Name\"></td>\n                <td><input type=\"text\" placeholder=\"Address\"></td>\n                <td><input type=\"text\" placeholder=\"Phone No\"></td>\n                <td><input type=\"text\" placeholder=\"Assigned To\"></td>\n                <td><input type=\"text\" placeholder=\"Service Type\"></td>\n                <td><span class=\"action-icons\"><img src=\"../assets/images/tick.png\" title=\"accept\"> <img src=\"../assets/images/close.png\" title=\"discard\" onclick=\"discardRow(pickupdelivery_${number + 1})\"></span></td>\n            </tr>`;\n} // discard added row\n\nexport function discardRow(element) {\n  element.remove();\n} // delete row from given table\n\nexport function deleteRecord(element) {\n  element.remove();\n}","map":{"version":3,"sources":["C:/Users/aravi/Desktop/wdm_phase3/React/src/administration/administration.js"],"names":["orders","equipment","pickupdelivery","customer","tasks","employees","managers","populateTables","require","populateOrderList","populateEquipmentList","populatePickupDeliveryList","populateCustomerList","populateTaskList","populateEmployeeList","populateManagerList","orderTable","document","getElementById","childNodes","forEach","element","innerHTML","No","OrderNo","CustomerName","Phone","Type","employeeTable","id","name","email","Address","PhoneNo","Gender","managerTable","Position","Branch","equipmentTable","EquipmentName","Status","customers","customerTable","pickupdeliveries","pickupdeliveryTable","Sno","Name","AssignedTo","ServiceType","tasksTable","Desc","Services","addOrder","number","length","Number","toString","addEquipment","addTasks","taskTable","addCustomer","addEmployee","addManager","addDeliveries","discardRow","remove","deleteRecord"],"mappings":"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","sourcesContent":["var orders, equipment, pickupdelivery, customer, tasks, employees, managers;\nexport function populateTables() {\n    // fetch orders list\n            orders = require('../assets/staticData/ManageOrder.json');\n            populateOrderList(orders['Manage Orders'])\n\n    // fetch equipments list\n            equipment =  require('../assets/staticData/ManageEqupment.json');\n            populateEquipmentList(equipment['ManageEquipment'])\n\n\n    // fetch pickup/delivery list\n            pickupdelivery = require('../assets/staticData/ManageService.json');\n            populatePickupDeliveryList(pickupdelivery['ManageService']);\n\n\n    // fetch customer list\n            customer = require('../assets/staticData/ManageCustomers.json')\n            populateCustomerList(customer['ManageCustomer']);\n\n\n    // fetch tasks list\n            tasks = require('../assets/staticData/ManageTask.json')\n            populateTaskList(tasks['ManageTask'])\n\n\n    // fetch employees list\n            employees = require('../assets/staticData/ManageEmployee.json');\n            populateEmployeeList(employees['ManageEmployee'])\n\n    // fetch managers list\n            managers = require('../assets/staticData/ManageManagers.json');\n            populateManagerList(managers['ManageManagers'])\n}\n\n\n// populate order table\nfunction populateOrderList(orders) {\n    var orderTable = document.getElementById('order-table')?.childNodes[0];\n    if(orderTable) {\n    orders.forEach(element => {\n        orderTable.innerHTML += `<tr id=\"${`order_` + element.No}\">\n                <td>${element.No}</td>\n                <td>${element.OrderNo}</td>\n                <td>${element.CustomerName}</td>\n                <td>${element.Phone}</td>\n                <td>${element.Type}</td>\n                <td><span class=\"action-icons\"><img src=\"../../assets/images/edit.png\" onclick= \"editOrder(${`order_` + element.No})\" title=\"edit\"> <img src=\"../../assets/images/delete.png\" onclick=\"deleteRecord(order_${element.No})\" title=\"delete\"></span></td>\n            </tr>`;\n    });\n}\n}\n\n// populate employee table\nfunction populateEmployeeList(employees) {\n    var employeeTable = document.getElementById('employee-table')?.childNodes[0];\n    if(employeeTable){\n    employees.forEach(element => {\n        employeeTable.innerHTML += `<tr id=\"${`employee_` + element.id}\">\n                <td>${element.id}</td>\n                <td>${element.name}</td>\n                <td>${element.email}</td>\n                <td>${element.Address}</td>\n                <td>${element.PhoneNo}</td>\n                <td>${element.Gender}</td>\n                <td><span class=\"action-icons\"><img src=\"../assets/images/edit.png\" onclick= \"editOrder(${`order_` + element.id})\" title=\"edit\"> <img src=\"../assets/images/delete.png\" onclick=\"deleteRecord(order_${element.id})\" title=\"delete\"></span></td>\n            </tr>`;\n    }); }\n}\n\n//// populate manager table\nfunction populateManagerList(managers) {\n    var managerTable = document.getElementById('manager-table')?.childNodes[0];\n    if(managerTable) {\n    managers.forEach(element => {\n        managerTable.innerHTML += `<tr id=\"${`employee_` + element.id}\">\n                <td>${element.id}</td>\n                <td>${element.name}</td>\n                <td>${element.email}</td>\n                <td>${element.Address}</td>\n                <td>${element.PhoneNo}</td>\n                <td>${element.Gender}</td>\n                <td>${element.Position}</td>\n                <td>${element.Branch}</td>\n                <td><span class=\"action-icons\"><img src=\"../assets/images/edit.png\" onclick= \"editOrder(${`order_` + element.id})\" title=\"edit\"> <img src=\"../assets/images/delete.png\" onclick=\"deleteRecord(order_${element.id})\" title=\"delete\"></span></td>\n            </tr>`;\n    }); }\n}\n\n// populate equipment table\nfunction populateEquipmentList(equipment) {\n    var equipmentTable = document.getElementById('equipment-table')?.childNodes[0];\n    if(equipmentTable) {\n    equipment.forEach(element => {\n        equipmentTable.innerHTML += `<tr id=\"${`equipment_` + element.No}\">\n                <td>${element.No}</td>\n                <td>${element.EquipmentName}</td>\n                <td>${element.Status}</td>\n                <td>${element.OrderNo}</td>\n                <td>${element.CustomerName}</td>\n                <td><span class=\"action-icons\"><img src=\"../assets/images/edit.png\" onclick=\"editEquipment(${`equipment_` + element.No}) title=\"edit\"> <img src=\"../assets/images/delete.png\" onclick=\"deleteRecord(equipment_${element.No})\" title=\"delete\"></span></td>\n            </tr>`;\n    });}\n}\n\n// populate customer table\nfunction populateCustomerList(customers) {\n    let customerTable = document.getElementById('customer-table')?.childNodes[0];\n    if(customerTable) {\n    customers.forEach(element => {\n        customerTable.innerHTML += `<tr id=\"${`employee_` + element.id}\">\n                <td>${element.id}</td>\n                <td>${element.name}</td>\n                <td>${element.Address}</td>\n                <td>${element.email}</td>\n                <td>${element.PhoneNo}</td>\n                <td>${element.Gender}</td>\n                <td><span class=\"action-icons\"><img src=\"../assets/images/edit.png\" onclick=\"editEquipment(${`customer_` + element.id}) title=\"edit\"> <img src=\"../assets/images/delete.png\" onclick=\"deleteRecord(customer_${element.id})\" title=\"delete\"></span></td>\n            </tr>`;\n    });\n }\n}\n\n//// populate pickupdelivery table\nfunction populatePickupDeliveryList(pickupdeliveries) {\n    let pickupdeliveryTable = document.getElementById('delivery-table')?.childNodes[0];\n    if(pickupdeliveryTable) {\n    pickupdeliveries.forEach(element => {\n        pickupdeliveryTable.innerHTML += `<tr id=\"${`pickupdelivery_` + element.Sno}\">\n                <td>${element.Sno}</td>\n                <td>${element.OrderNo}</td>\n                <td>${element.Name}</td>\n                <td>${element.Address}</td>\n                <td>${element.PhoneNo}</td>\n                <td>${element.AssignedTo}</td>\n                <td>${element.ServiceType}</td>\n                <td><span class=\"action-icons\"><img src=\"../assets/images/edit.png\" onclick=\"editEquipment(${`pickupdelivery_` + element.Sno}) title=\"edit\"> <img src=\"../assets/images/delete.png\" onclick=\"deleteRecord(pickupdelivery_${element.Sno})\" title=\"delete\"></span></td>\n            </tr>`;\n    });\n }\n}\n\n// populate tasks table\nfunction populateTaskList(tasks) {\n    let tasksTable = document.getElementById('tasks-table')?.childNodes[0];\n    if(tasksTable) {\n    tasks.forEach(element => {\n        tasksTable.innerHTML += `<tr id=\"${`tasks_` + element.Sno}\">\n                <td>${element.Sno}</td>\n                <td>${element.CustomerName}</td>\n                <td>${element['Assigned To']}</td>\n                <td>${element.Desc}</td>\n                <td>${element.Services}</td>\n                <td><span class=\"action-icons\"><img src=\"../assets/images/edit.png\" onclick=\"editEquipment(${`tasks_` + element.Sno}) title=\"edit\"> <img src=\"../assets/images/delete.png\" onclick=\"deleteRecord(tasks_${element.Sno})\" title=\"delete\"></span></td>\n            </tr>`;\n    });\n }\n}\n\n//add new row to order table\nexport function addOrder() {\n    var orderTable = document.getElementById('order-table').childNodes[0];\n    let number = orders['Manage Orders'].length + 1;\n    orderTable.innerHTML += `<tr id=\"order_${number}\">\n        <td>${number}</td>\n        <td>${(Number((orders['Manage Orders'])[orders['Manage Orders'].length - 1].OrderNo) + 1).toString()}</td>\n        <td><input type=\"text\" placeholder=\"Customer Name\"></td>\n        <td><input type=\"number\" maxLength=\"10\" placeholder=\"Phone\"></td>\n        <td><input type=\"text\" placeholder=\"Type\"></td>\n        <td><span class=\"action-icons\"><img src=\"../assets/images/tick.png\" title=\"accept\"> <img src=\"../assets/images/close.png\" title=\"discard\" onclick=\"discardRow(order_${number})\"></span></td></tr>`;\n}\n\n//add new row to equipment table\nexport function addEquipment() {\n    let number = Number(equipment['ManageEquipment'][equipment['ManageEquipment'].length - 1].No)\n    var equipmentTable = document.getElementById('equipment-table').childNodes[0];\n    equipmentTable.innerHTML += `<tr id=\"equipment_${number + 1}\">\n                <td>${number + 1}</td>\n                <td><input type=\"text\" placeholder=\"Equipment Name\"></td>\n                <td><input type=\"text\" placeholder=\"Status\"></td>\n                <td><input type=\"text\" placeholder=\"Order No\"></td>\n                <td><input type=\"text\" placeholder=\"Customer Name\"></td>\n                <td><span class=\"action-icons\"><img src=\"../assets/images/tick.png\" title=\"accept\"> <img src=\"../assets/images/close.png\" title=\"discard\" onclick=\"discardRow(equipment_${number + 1})\"></span></td>\n            </tr>`;\n}\n\n//add new row to tasks table\nexport function addTasks() {\n    let number = Number(tasks['ManageTask'][tasks['ManageTask'].length - 1].Sno)\n    var taskTable = document.getElementById('tasks-table').childNodes[0];\n    taskTable.innerHTML += `<tr id=\"tasks_${number + 1}\">\n                <td>${number + 1}</td>\n                <td><input type=\"text\" placeholder=\"Customer Name\"></td>\n                <td><input type=\"text\" placeholder=\"Assigned to\"></td>\n                <td><input type=\"text\" placeholder=\"Desc\"></td>\n                <td><input type=\"text\" placeholder=\"Services\"></td>\n                <td><span class=\"action-icons\"><img src=\"../assets/images/tick.png\" title=\"accept\"> <img src=\"../assets/images/close.png\" title=\"discard\" onclick=\"discardRow(tasks_${number + 1})\"></span></td>\n            </tr>`;\n}\n\n////add new row to customer table\nexport function addCustomer() {\n    let number = Number(customer['ManageCustomer'][customer['ManageCustomer'].length - 1].id)\n    var customerTable = document.getElementById('customer-table').childNodes[0];\n    customerTable.innerHTML += `<tr id=\"customer_${number + 1}\">\n                <td>${number + 1}</td>\n                <td><input type=\"text\" placeholder=\"Name\"></td>\n                <td><input type=\"text\" placeholder=\"Address\"></td>\n                <td><input type=\"email\" placeholder=\"Email\"></td>\n                <td><input type=\"number\" placeholder=\"Phone No\"></td>\n                <td><input type=\"text\" placeholder=\"Gender\"></td>\n                <td><span class=\"action-icons\"><img src=\"../assets/images/tick.png\" title=\"accept\"> <img src=\"../assets/images/close.png\" title=\"discard\" onclick=\"discardRow(customer_${number + 1})\"></span></td>\n            </tr>`;\n}\n\n//add new row to employee table\nexport function addEmployee() {\n    let number = Number(employees['ManageEmployee'][employees['ManageEmployee'].length - 1].id)\n    var employeeTable = document.getElementById('employee-table').childNodes[0];\n    employeeTable.innerHTML += `<tr id=\"employee_${number + 1}\">\n                <td>${number + 1}</td>\n                <td><input type=\"text\" placeholder=\"Name\"></td>\n                <td><input type=\"text\" placeholder=\"Email\"></td>\n                <td><input type=\"email\" placeholder=\"Address\"></td>\n                <td><input type=\"number\" placeholder=\"Phone No\"></td>\n                <td><input type=\"text\" placeholder=\"Gender\"></td>\n                <td><span class=\"action-icons\"><img src=\"../assets/images/tick.png\" title=\"accept\"> <img src=\"../assets/images/close.png\" title=\"discard\" onclick=\"discardRow(employee_${number + 1})\"></span></td>\n            </tr>`;\n}\n\n//add new row to manager table\nexport function addManager() {\n    let number = Number(managers['ManageManagers'][managers['ManageManagers'].length - 1].id)\n    var managerTable = document.getElementById('manager-table').childNodes[0];\n    managerTable.innerHTML += `<tr id=\"manager_${number + 1}\">\n                <td>${number + 1}</td>\n                <td><input type=\"text\" placeholder=\"Name\"></td>\n                <td><input type=\"text\" placeholder=\"Email\"></td>\n                <td><input type=\"email\" placeholder=\"Address\"></td>\n                <td><input type=\"number\" placeholder=\"Phone No\"></td>\n                <td><input type=\"text\" placeholder=\"Gender\"></td>\n                <td><input type=\"text\" placeholder=\"Position\"></td>\n                <td><input type=\"text\" placeholder=\"Location\"></td>\n                <td><span class=\"action-icons\"><img src=\"../assets/images/tick.png\" title=\"accept\"> <img src=\"../assets/images/close.png\" title=\"discard\" onclick=\"discardRow(manager_${number + 1})\"></span></td>\n            </tr>`;\n}\n\n//add new row to delivery table\nexport function addDeliveries() {\n    let number = Number(pickupdelivery['ManageService'][pickupdelivery['ManageService'].length - 1].Sno)\n    var pickupdeliveryTable = document.getElementById('delivery-table').childNodes[0];\n    pickupdeliveryTable.innerHTML += `<tr id=\"pickupdelivery_${number + 1}\">\n                <td>${number + 1}</td>\n                <td><input type=\"text\" placeholder=\"Order No\"></td>\n                <td><input type=\"text\" placeholder=\"Name\"></td>\n                <td><input type=\"text\" placeholder=\"Address\"></td>\n                <td><input type=\"text\" placeholder=\"Phone No\"></td>\n                <td><input type=\"text\" placeholder=\"Assigned To\"></td>\n                <td><input type=\"text\" placeholder=\"Service Type\"></td>\n                <td><span class=\"action-icons\"><img src=\"../assets/images/tick.png\" title=\"accept\"> <img src=\"../assets/images/close.png\" title=\"discard\" onclick=\"discardRow(pickupdelivery_${number + 1})\"></span></td>\n            </tr>`;\n}\n\n// discard added row\nexport function discardRow(element) {\n    element.remove();\n}\n\n\n// delete row from given table\nexport function deleteRecord(element) {\n    element.remove();\n}\n"]},"metadata":{},"sourceType":"module"}